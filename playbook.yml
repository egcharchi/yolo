---
- name: Provision using Ansible and Vagrant an e-Commerce application on Docker
  hosts: all
  ignore_unreachable: true
  become: true
  vars:
    github_repo: https://github.com/egcharchi/yolo.git
    client_img: egcharchi/yolo-client:1.0.1
    backend_img: egcharchi/yolo-backend:1.0.1
    db_img: egcharchi/yolo-mongodb:1.0.1
    client_port: "3000:3000"
    backend_port: "5000:5000"
    db_port: "27017:27017"
    docker_key_url: https://download.docker.com/linux/ubuntu/gpg

  tasks:
  
      
  - name: Install Docker Dependencies
    ansible.builtin.apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      state: present
    
  - name: Add Docker GPG Key
    ansible.builtin.apt_key: 
       url: "{{ docker_key_url }}"
       state: present 

  - name: Install Docker Repository
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      state: present 
      update_cache: true 
  
  - name: Install Docker
    ansible.builtin.apt:
      name: docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      state: present
      
       
  
  - name: clone git repo - https://github.com/egcharchi/yolo.git
    apt_repository:
       repo: "{{ github_repo }}"
       dest: /home/yolo

  - name: Create the MongoDB Container
    docker_container:
      name: yolo-mongodb
      image: "{{ db_img }}"
      ports:
        - "{{ db_port }}"
      volumes:
        - /data

  - name: Create the Backend Container
    docker_container:
      name: yolo-backend
      image: "{{ backend_img }}"
      command: npm install 
      state: present
      ports:
        - "{{ backend_port }}"

  - name: Create the Client Container
    docker_container:
      name: yolo-frontend
      image: "{{ client_img }}"
      command: npm install
      state: present
      ports:
        - "{{ client_port }}"
      volumes_from:
        - mydata
